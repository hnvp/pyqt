# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'smart_home.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QObject, QSize, QPointF, QPropertyAnimation, QEasingCurve, pyqtSlot, Qt
from PyQt5.QtGui import  QPainter, QPalette, QLinearGradient, QGradient
from PyQt5.QtWidgets import QAbstractButton, QApplication, QWidget, QHBoxLayout, QLabel
import image
import numpy as np
import matplotlib.pyplot as plt

class SwitchPrivate(QtCore.QObject):
        def __init__(self, q, parent=None):
                QtCore.QObject.__init__(self, parent=parent)
                self.mPointer = q
                self.mPosition = 0.0
                self.mGradient = QtGui.QLinearGradient()
                self.mGradient.setSpread(QtGui.QGradient.PadSpread)

                self.animation = QtCore.QPropertyAnimation(self)
                self.animation.setTargetObject(self)
                self.animation.setPropertyName(b'position')
                self.animation.setStartValue(0.0)
                self.animation.setEndValue(1.0)
                self.animation.setDuration(200)
                self.animation.setEasingCurve(QtCore.QEasingCurve.InOutExpo)

                self.animation.finished.connect(self.mPointer.update)
                
        @QtCore.pyqtProperty(float)
        def position(self):
                return self.mPosition

        @position.setter
        def position(self, value):
                self.mPosition = value
                self.mPointer.update()

        def draw(self, painter):
                r = self.mPointer.rect()
                margin = r.height()/10
                shadow = self.mPointer.palette().color(QtGui.QPalette.Dark)
                light = self.mPointer.palette().color(QtGui.QPalette.Light)
                button = self.mPointer.palette().color(QtGui.QPalette.Button)
                painter.setPen(QtCore.Qt.NoPen)

                self.mGradient.setColorAt(0, shadow.darker(130))
                self.mGradient.setColorAt(1, light.darker(130))
                self.mGradient.setStart(0, r.height())
                self.mGradient.setFinalStop(0, 0)
                painter.setBrush(self.mGradient)
                painter.drawRoundedRect(r, r.height()/2, r.height()/2)

                self.mGradient.setColorAt(0, shadow.darker(140))
                self.mGradient.setColorAt(1, light.darker(160))
                self.mGradient.setStart(0, 0)
                self.mGradient.setFinalStop(0, r.height())
                painter.setBrush(self.mGradient)
                painter.drawRoundedRect(QtCore.QRectF(int(r.left() + margin), int(r.top() + margin), int(r.width() - 2*margin), int(r.height() - 2*margin)), r.height()/2, r.height()/2)

                self.mGradient.setColorAt(0, button.darker(130))
                self.mGradient.setColorAt(1, button)

                painter.setBrush(self.mGradient)

                x = r.height()/2.0 + self.mPosition*(r.width()-r.height())
                painter.drawEllipse(QtCore.QPointF(x, r.height()/2), r.height()/2-margin, r.height()/2-margin)

        @QtCore.pyqtSlot(bool, name='animate')
        def animate(self, checked):
                self.animation.setDirection(QtCore.QPropertyAnimation.Forward if checked else QtCore.QPropertyAnimation.Backward)
                self.animation.start()

class Switch(QtWidgets.QAbstractButton):
        def __init__(self, parent=None):
                QtWidgets.QAbstractButton.__init__(self, parent=parent)
                self.dPtr = SwitchPrivate(self)
                self.setCheckable(True)
                self.clicked.connect(self.dPtr.animate)

        def sizeHint(self):
                return QtCore.QSize(84, 42)

        def paintEvent(self, event):
                painter = QtGui.QPainter(self)
                painter.setRenderHint(QtGui.QPainter.Antialiasing)
                self.dPtr.draw(painter)

        def resizeEvent(self, event):
                self.update()

class Ui_MainWindow(object):
        def setupUi(self, MainWindow):
                MainWindow.setObjectName("MainWindow")
                MainWindow.resize(752, 597)
                MainWindow.setStyleSheet("background-color: lightgray;")
                self.centralwidget = QtWidgets.QWidget(MainWindow)
                self.centralwidget.setObjectName("centralwidget")
                self.frame = QtWidgets.QFrame(self.centralwidget)
                self.frame.setGeometry(QtCore.QRect(150, 0, 601, 151))
                self.frame.setStyleSheet("background: gray;")
                self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
                self.frame.setObjectName("frame")
                self.label = QtWidgets.QLabel(self.frame)
                self.label.setGeometry(QtCore.QRect(0, 40, 601, 81))
                font = QtGui.QFont()
                font.setFamily("Rockwell Extra Bold")
                font.setPointSize(36)
                font.setBold(True)
                font.setWeight(75)
                self.label.setFont(font)
                self.label.setAlignment(QtCore.Qt.AlignCenter)
                self.label.setObjectName("label")
                self.frame_2 = QtWidgets.QFrame(self.centralwidget)
                self.frame_2.setGeometry(QtCore.QRect(0, 150, 751, 421))
                self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
                self.frame_2.setObjectName("frame_2")
                self.frame_3 = QtWidgets.QFrame(self.frame_2)
                self.frame_3.setGeometry(QtCore.QRect(0, 0, 151, 381))
                self.frame_3.setStyleSheet("background: rgb(173, 173, 173);")
                self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
                self.frame_3.setObjectName("frame_3")
                self.door_open = QtWidgets.QPushButton(self.frame_3)
                self.door_open.setGeometry(QtCore.QRect(10, 40, 61, 31))
                font = QtGui.QFont()
                font.setPointSize(10)
                font.setBold(True)
                font.setWeight(75)
                self.door_open.setFont(font)
                self.door_open.setObjectName("door_open")
                self.door_close = QtWidgets.QPushButton(self.frame_3)
                self.door_close.setGeometry(QtCore.QRect(80, 40, 61, 31))
                font = QtGui.QFont()
                font.setPointSize(10)
                font.setBold(True)
                font.setWeight(75)
                self.door_close.setFont(font)
                self.door_close.setObjectName("door_close")
                self.light_slider = QtWidgets.QSlider(self.frame_3)
                self.light_slider.setGeometry(QtCore.QRect(10, 140, 131, 21))
                self.light_slider.setStyleSheet("")
                self.light_slider.setOrientation(QtCore.Qt.Horizontal)
                self.light_slider.setObjectName("light_slider")
                self.tivi_onoff = QtWidgets.QPushButton(self.frame_3)
                self.tivi_onoff.setGeometry(QtCore.QRect(30, 330, 91, 31))
                font = QtGui.QFont()
                font.setPointSize(10)
                font.setBold(True)
                font.setWeight(75)
                self.tivi_onoff.setFont(font)
                self.tivi_onoff.setObjectName("tivi_onoff")
                self.aico = QtWidgets.QFrame(self.frame_3)
                self.aico.setGeometry(QtCore.QRect(30, 230, 91, 31))
                self.aico.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.aico.setFrameShadow(QtWidgets.QFrame.Raised)
                self.aico.setObjectName("aico")
                self.frame_4 = QtWidgets.QFrame(self.frame_2)
                self.frame_4.setGeometry(QtCore.QRect(150, 0, 341, 301))
                self.frame_4.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.frame_4.setFrameShadow(QtWidgets.QFrame.Raised)
                self.frame_4.setObjectName("frame_4")
                self.frame_9 = QtWidgets.QFrame(self.frame_4)
                self.frame_9.setGeometry(QtCore.QRect(0, 0, 161, 151))
                self.frame_9.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.frame_9.setFrameShadow(QtWidgets.QFrame.Raised)
                self.frame_9.setObjectName("frame_9")
                self.label_2 = QtWidgets.QLabel(self.frame_9)
                self.label_2.setGeometry(QtCore.QRect(10, -20, 141, 171))
                self.label_2.setStyleSheet("image: url(:/image/door_close.png);")
                self.label_2.setText("")
                self.label_2.setObjectName("label_2")
                self.frame_10 = QtWidgets.QFrame(self.frame_4)
                self.frame_10.setGeometry(QtCore.QRect(180, 0, 161, 151))
                self.frame_10.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.frame_10.setFrameShadow(QtWidgets.QFrame.Raised)
                self.frame_10.setObjectName("frame_10")
                self.label_3 = QtWidgets.QLabel(self.frame_10)
                self.label_3.setGeometry(QtCore.QRect(30, 10, 101, 101))
                self.label_3.setStyleSheet("QLabel {\n"
                                        "    border-radius: 50%;\n"
                                        "    background-color: black;\n"
                                        "}\n"
                                        "")
                self.label_3.setText("")
                self.label_3.setObjectName("label_3")
                self.label_9 = QtWidgets.QLabel(self.frame_10)
                self.label_9.setGeometry(QtCore.QRect(60, 100, 41, 21))
                self.label_9.setStyleSheet("QLabel {\n"
                                        "    background-color: rgb(77, 77, 77);\n"
                                        "}")
                self.label_9.setText("")
                self.label_9.setObjectName("label_9")
                self.label_8 = QtWidgets.QLabel(self.frame_10)
                self.label_8.setGeometry(QtCore.QRect(60, 100, 41, 41))
                self.label_8.setStyleSheet("QLabel {\n"
                                        "    border-radius: 20%;\n"
                                        "    background-color: rgb(77, 77, 77);\n"
                                        "}")
                self.label_8.setText("")
                self.label_8.setObjectName("label_8")
                self.label_8.raise_()
                self.label_9.raise_()
                self.label_3.raise_()
                self.frame_11 = QtWidgets.QFrame(self.frame_4)
                self.frame_11.setGeometry(QtCore.QRect(0, 150, 161, 151))
                self.frame_11.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.frame_11.setFrameShadow(QtWidgets.QFrame.Raised)
                self.frame_11.setObjectName("frame_11")
                self.label_4 = QtWidgets.QLabel(self.frame_11)
                self.label_4.setGeometry(QtCore.QRect(10, 10, 141, 121))
                self.label_4.setStyleSheet("image: url(:/image/aico_off.png);")
                self.label_4.setText("")
                self.label_4.setObjectName("label_4")
                self.frame_12 = QtWidgets.QFrame(self.frame_4)
                self.frame_12.setGeometry(QtCore.QRect(180, 150, 161, 151))
                self.frame_12.setStyleSheet("image: url(:/image/tivi_off.png)")
                self.frame_12.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.frame_12.setFrameShadow(QtWidgets.QFrame.Raised)
                self.frame_12.setObjectName("frame_12")
                self.label_5 = QtWidgets.QLabel(self.frame_12)
                self.label_5.setGeometry(QtCore.QRect(10, 0, 141, 141))
                self.label_5.setStyleSheet("image: url(:/image/tivi_off.png);")
                self.label_5.setText("")
                self.label_5.setObjectName("label_5")
                self.frame_5 = QtWidgets.QFrame(self.frame_2)
                self.frame_5.setGeometry(QtCore.QRect(490, 0, 261, 381))
                self.frame_5.setStyleSheet("background: rgb(184, 184, 184);")
                self.frame_5.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.frame_5.setFrameShadow(QtWidgets.QFrame.Raised)
                self.frame_5.setObjectName("frame_5")
                self.frame_6 = QtWidgets.QFrame(self.frame_2)
                self.frame_6.setGeometry(QtCore.QRect(150, 300, 341, 81))
                self.frame_6.setStyleSheet("background: rgb(173, 173, 173);")
                self.frame_6.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.frame_6.setFrameShadow(QtWidgets.QFrame.Raised)
                self.frame_6.setObjectName("frame_6")
                self.mode1 = QtWidgets.QPushButton(self.frame_6)
                self.mode1.setGeometry(QtCore.QRect(10, 30, 101, 31))
                font = QtGui.QFont()
                font.setPointSize(10)
                font.setBold(True)
                font.setWeight(75)
                self.mode1.setFont(font)
                self.mode1.setObjectName("mode1")
                self.mode2 = QtWidgets.QPushButton(self.frame_6)
                self.mode2.setGeometry(QtCore.QRect(120, 30, 101, 31))
                font = QtGui.QFont()
                font.setPointSize(10)
                font.setBold(True)
                font.setWeight(75)
                self.mode2.setFont(font)
                self.mode2.setObjectName("mode2")
                self.exit = QtWidgets.QPushButton(self.frame_6)
                self.exit.setGeometry(QtCore.QRect(230, 30, 101, 31))
                font = QtGui.QFont()
                font.setPointSize(10)
                font.setBold(True)
                font.setWeight(75)
                self.exit.setFont(font)
                self.exit.setObjectName("exit")
                self.frame_8 = QtWidgets.QFrame(self.frame_2)
                self.frame_8.setGeometry(QtCore.QRect(0, 380, 751, 41))
                self.frame_8.setStyleSheet("background: gray;")
                self.frame_8.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.frame_8.setFrameShadow(QtWidgets.QFrame.Raised)
                self.frame_8.setObjectName("frame_8")
                self.label_6 = QtWidgets.QLabel(self.frame_8)
                self.label_6.setGeometry(QtCore.QRect(0, 0, 751, 41))
                font = QtGui.QFont()
                font.setFamily("Bahnschrift SemiBold SemiConden")
                font.setPointSize(14)
                font.setBold(True)
                font.setWeight(75)
                self.label_6.setFont(font)
                self.label_6.setAlignment(QtCore.Qt.AlignCenter)
                self.label_6.setObjectName("label_6")
                self.frame_7 = QtWidgets.QFrame(self.centralwidget)
                self.frame_7.setGeometry(QtCore.QRect(0, 0, 151, 151))
                self.frame_7.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.frame_7.setFrameShadow(QtWidgets.QFrame.Raised)
                self.frame_7.setObjectName("frame_7")
                self.label_7 = QtWidgets.QLabel(self.frame_7)
                self.label_7.setGeometry(QtCore.QRect(0, 0, 151, 151))
                self.label_7.setStyleSheet("image: url(:/image/ai_chan.png);")
                self.label_7.setText("")
                self.label_7.setObjectName("label_7")
                MainWindow.setCentralWidget(self.centralwidget)
                self.menubar = QtWidgets.QMenuBar(MainWindow)
                self.menubar.setGeometry(QtCore.QRect(0, 0, 752, 18))
                self.menubar.setObjectName("menubar")
                MainWindow.setMenuBar(self.menubar)
                self.statusbar = QtWidgets.QStatusBar(MainWindow)
                self.statusbar.setObjectName("statusbar")
                MainWindow.setStatusBar(self.statusbar)

                self.door_open.clicked.connect(self.open)
                self.door_close.clicked.connect(self.close)

                self.light_slider.valueChanged.connect(self.adjust_light)
                self.light_state = False
                
                self.switch_button = Switch(self.frame_3)
                self.switch_button.setGeometry(QtCore.QRect(30, 230, 91, 31))
                self.switch_button.setObjectName("switch_button")
                self.switch_button.clicked.connect(self.toggle_aico)
                self.aico_state = False

                self.tivi_state = False
                self.tivi_onoff.setText("OFF")
                self.tivi_onoff.clicked.connect(self.toggle_tivi)

                self.mode1.clicked.connect(self.mode_1_action)
                self.mode2.clicked.connect(self.mode_2_action)
                self.mode_1_count = 0

                self.exit.clicked.connect(MainWindow.close)

                self.frame_5.setLayout(QtWidgets.QVBoxLayout())
                self.chart_widget = QtWidgets.QWidget()
                self.frame_5.layout().addWidget(self.chart_widget)
                self.plot_chart()

                self.retranslateUi(MainWindow)
                QtCore.QMetaObject.connectSlotsByName(MainWindow)

        def retranslateUi(self, MainWindow):
                _translate = QtCore.QCoreApplication.translate
                MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
                self.label.setText(_translate("MainWindow", "SMART HOME"))
                self.door_open.setText(_translate("MainWindow", "OPEN"))
                self.door_close.setText(_translate("MainWindow", "CLOSE"))
                self.tivi_onoff.setText(_translate("MainWindow", "OFF"))
                self.mode1.setText(_translate("MainWindow", "MODE 1"))
                self.mode2.setText(_translate("MainWindow", "MODE 2"))
                self.exit.setText(_translate("MainWindow", "EXIT"))
                self.label_6.setText(_translate("MainWindow", "HOÀNG NGỌC VĨNH PHÚC     19161150"))

        def open(self):
                self.label_2.setStyleSheet("image: url(:/image/door_open);")
        def close(self):
                self.label_2.setStyleSheet("image: url(:/image/door_close);")

        def adjust_light(self, value):
                brightness = value
                color = f'rgb({brightness * 2.55}, {brightness * 2.55}, {brightness * 2.55})'
                border_radius = "50px"
                style_sheet = f"background-color: {color}; border-radius: {border_radius};"
                self.label_3.setStyleSheet(style_sheet)

        def toggle_aico(self):
                switch_state = self.switch_button.isChecked()
                if switch_state:
                        self.label_4.setStyleSheet("image: url(:/image/aico_on.png);")
                else:
                        self.label_4.setStyleSheet("image: url(:/image/aico_off.png);")
        
        def toggle_tivi(self):
                self.tivi_state = not self.tivi_state
                if self.tivi_state:
                        self.label_5.setStyleSheet("image: url(:/image/tivi_on.png);")
                        self.tivi_onoff.setText("ON")
                else:
                        self.label_5.setStyleSheet("image: url(:/image/tivi_off.png);")
                        self.tivi_onoff.setText("OFF")

        def mode_1_action(self):
                self.mode_1_count += 1
                if "door_open" in self.label_2.styleSheet():
                        self.label_2.setStyleSheet("image: url(:/image/door_close);")
                else:
                        self.label_2.setStyleSheet("image: url(:/image/door_open);")
    
                if self.mode_1_count % 2 == 1:
                        self.adjust_light(100)
                else:
                        self.adjust_light(0)

                self.label_4.setStyleSheet("image: url(:/image/aico_off.png);")

                self.label_5.setStyleSheet("image: url(:/image/tivi_off.png);")

        def mode_2_action(self):
                self.label_2.setStyleSheet("image: url(:/image/door_close);")

                self.label_3.setStyleSheet("background-color: black; border-radius: 50px;")

                self.aico_state = not self.aico_state
                if self.aico_state:
                        self.label_4.setStyleSheet("image: url(:/image/aico_on.png);")
                else:
                        self.label_4.setStyleSheet("image: url(:/image/aico_off.png);")

                self.tivi_state = not self.tivi_state
                if self.tivi_state:
                        self.label_5.setStyleSheet("image: url(:/image/tivi_on.png);")
                        self.tivi_onoff.setText("ON")
                else:
                        self.label_5.setStyleSheet("image: url(:/image/tivi_off.png);")
                        self.tivi_onoff.setText("OFF")

        def plot_chart(self):
                data1 = [5, 2, 7, 8, 2]
                data2 = [8, 6, 2, 5, 6]
                x = np.array([1, 3, 5, 7, 9])
                x2 = np.array([2, 4, 6, 8, 10])

                fig, ax = plt.subplots(figsize=(2.2, 3.5))
                ax.bar(x, data1, label='Example one')
                ax.bar(x2, data2, label='Example two', color='b')
                ax.legend()
                ax.set_title('Example 3 - Bar Graph')
                ax.set_ylabel('Bar Number')
                ax.set_xlabel('Bar Height')

                canvas = fig.canvas
                canvas.draw()
                width, height = canvas.get_width_height()
                img = QtGui.QImage(canvas.buffer_rgba(), width, height, QtGui.QImage.Format_RGBA8888)

                pixmap = QtGui.QPixmap.fromImage(img)
                label = QtWidgets.QLabel()
                label.setPixmap(pixmap)
                layout = QtWidgets.QVBoxLayout()
                layout.addWidget(label)
                self.chart_widget.setLayout(layout)

                plt.close(fig)

                self.chart_widget.show()

if __name__ == "__main__":
        import sys
        app = QtWidgets.QApplication(sys.argv)
        MainWindow = QtWidgets.QMainWindow()
        ui = Ui_MainWindow()
        ui.setupUi(MainWindow)
        MainWindow.show()
        sys.exit(app.exec_())
